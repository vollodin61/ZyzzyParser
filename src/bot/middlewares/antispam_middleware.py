from asyncio import sleep as asy_sleep
from random import randint
from typing import Dict, Any, Callable, Awaitable

from aiogram import BaseMiddleware
from aiogram.fsm.storage.redis import RedisStorage
from aiogram.types import Message
from aiogram.types.base import TelegramObject

from src.bot.config.bot_config import BotConfig
from src.config.conf import debug_logger


class Antispam(BaseMiddleware):

    def __init__(self, storage: RedisStorage):
        self._storage = storage

    async def __call__(self,
                       handler: Callable[[TelegramObject, Dict[str, Any]],
                       Awaitable[Any]],
                       event: Message,
                       data: Dict[str, Any]) -> Any:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–æ–≤ –∏ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
        if event.from_user.id in BotConfig.admins_ids or event.from_user.id == BotConfig.bot.id:
            return await handler(event, data)

        # –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_key = f"user{event.from_user.id}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
        request_count = await self._storage.redis.get(name=user_key)
        debug_logger(request_count)

        if request_count:
            if request_count.decode().isdigit():
                request_count = int(request_count.decode())
                if request_count >= 4:  # –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
                    wait = randint(11, 16)  # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
                    await self._storage.redis.set(name=user_key, value='block', ex=wait)
                    await event.answer(text=f"–ü–æ–º–µ–¥–ª–µ–Ω–Ω–µ–µ, —è –∑–∞–ø–∏—Å—É—é... –ü–æ–¥–æ–∂–¥–∏—Ç–µ {wait} —Å–µ–∫—É–Ω–¥",
                                       reply_to_message_id=event.message_id)
                    await asy_sleep(wait)
                    await event.answer(text="–ü–∏—à–∏—Ç–µ, –Ω–æ –Ω–µ —Ç–æ—Ä–æ–ø—è—Å—å, —è –∂ –∑–∞–ø–∏—Å—É—é ‚úçÔ∏èüëÄ")
                    return  # –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
                else:
                    request_count += 1
                    await self._storage.redis.set(name=user_key, value=request_count, ex=10 - request_count * 2)
            else:
                return
        else:
            await self._storage.redis.set(name=user_key, value=1, ex=10)
        return await handler(event, data)
