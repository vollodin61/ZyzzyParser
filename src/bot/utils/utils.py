import os

import pandas as pd
from typing import Tuple, Optional

from src.bot.utils.exceptions import MissingColumnsError, FileValidationError
from src.config import error_logger


async def get_file_data_for_answer(file_path: str) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º Excel-—Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    :param file_path: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    :return: –°—Ç—Ä–æ–∫–∞ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Ñ–∞–π–ª–∞
    """
    try:
        df = pd.read_excel(file_path)

        # –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–≤—ã–µ 20)
        max_rows_to_show = 20
        if len(df) > max_rows_to_show:
            df = df.head(max_rows_to_show)
            row_count_info = f"\n\n–ü–æ–∫–∞–∑–∞–Ω–æ –ø–µ—Ä–≤—ã–µ {max_rows_to_show} —Å—Ç—Ä–æ–∫ –∏–∑ {len(df)}"
        else:
            row_count_info = f"\n\n–í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(df)}"

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º DataFrame –≤ —Å—Ç—Ä–æ–∫—É
        result = []

        file_name = os.path.basename(file_path)
        result.append(f"üìÑ –§–∞–π–ª: {file_name}")

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ)
        with pd.ExcelFile(file_path) as xls:
            if len(xls.sheet_names) > 1:
                result.append(f"\nüìë –õ–∏—Å—Ç—ã: {', '.join(xls.sheet_names)}")

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ DataFrame
        result.append("\n\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:")
        result.append(df.to_string(index=False))
        result.append(row_count_info)

        return "\n".join(result)

    except Exception as e:
        error_logger(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {repr(e)}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞"


async def validate_file_structure(file_path: str) -> Tuple[bool, Optional[str], Optional[pd.DataFrame]]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel-—Ñ–∞–π–ª–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.
    –í–Ω–∞—á–∞–ª–µ –ø—Ä–æ—Å—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å, —Ç–µ–º —Å–∞–º—ã–º –ø—Ä–æ–≤–µ—Ä—è—è excel —ç—Ç–æ –∏–ª–∏ –Ω–µ—Ç.
    –ü–æ—Ç–æ–º —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫.

    :param file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
    :return: None –∏–ª–∏ —Ä–µ–π–∑–∏—Ç –æ—à–∏–±–∫—É
    """
    try:
        df = pd.read_excel(file_path)

        required_columns = {'title', 'url', 'xpath'}
        if not required_columns.issubset(df.columns):
            missing = required_columns - set(df.columns)
            raise MissingColumnsError(missing)
    except FileValidationError:
        raise
    except Exception as e:
        raise FileValidationError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {str(e)}")

